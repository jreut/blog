#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const mustache = require('mustache')
const toc = require('../lib/toc')

const src = 'src'
const dist = 'dist'

const indexTemplate = path.join(src, 'index.mustache')
const indexDist = path.join(dist, 'index.html')
const entryTemplate = path.join(src, 'entry.mustache')
const entrySrc = path.join(src, 'entries')
const entryDist = path.join(dist, 'entries')

toc().then(function (toc) {
  const templateString = fs.readFileSync(indexTemplate, { encoding: 'utf-8' })
  fs.writeFileSync(indexDist, mustache.render(templateString, toc))
})

const entryTemplateString = fs.readFileSync(entryTemplate, { encoding: 'utf-8' })

fs.readdirSync(entrySrc).forEach(function (file) {
  const partial = fs.readFileSync(path.join(entrySrc, file), { encoding: 'utf-8' })

  const outputFile = path.join(entryDist, path.basename(file))
  fs.writeFileSync(outputFile, mustache.render(entryTemplateString, {}, { entry: partial }))
})
